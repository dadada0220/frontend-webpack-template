@charset 'utf-8';

@use 'variables' as *;
@use 'sass:map';

// メディアクエリ
// @param $breakPoint ブレイクポイント（`variables.scss`の変数で指定すること）
// **********************************************
@mixin max-screen($breakPoint) {
  @media (max-width: $breakPoint) {
    @content;
  }
}
@mixin min-screen($breakPoint) {
  @media (min-width: $breakPoint) {
    @content;
  }
}
@mixin screen($breakPoint_min, $breakPoint_max) {
  @media (min-width: $breakPoint_min) and (max-width: $breakPoint_max) {
    @content;
  }
}

// 背景画像
// @param $file_name `/assets/img/`以降の画像パス
// **********************************************
@mixin background-image($file_name) {
  background-image: url($path_img + $file_name);
  background-repeat: no-repeat;
}

// アイコン（疑似要素をアイコン化する時に使用）
// @param $file_name `/assets/img/`以降の画像パス
// @param $width アイコンの横幅
// @param $height アイコンの高さ
// **********************************************
@mixin icon($file_name, $width, $height) {
  width: $width;
  height: $height;
  background: url($path_img + $file_name) center / $width $height no-repeat;
}

// 要素を中央配置
// @param $direction `x`, `y`, `xy`のいずれかを引数に与える
// **********************************************
@mixin center($direction) {
  position: absolute;
  margin: auto;
  @if $direction == xy {
    inset: 0;
  } @else if $direction == x {
    inset: auto 0;
  } @else if $direction == y {
    inset: 0 auto;
  }
}

// margin, paddingのユーティリティクラスを生成
// @param $class クラス名
// @param $property プロパティ名
// @param $double 上下or左右にスタイルを適用させる場合、上下なら'y'、左右なら'x'を与える（省略可）
// **********************************************
// 使用例
// @include create-space-class('.u-mt', 'margin-top');
// @include create-space-class('.u-ml', 'margin-left');
// @include create-space-class('.u-mr', 'margin-right');
// @include create-space-class('.u-mb', 'margin-bottom');
// @include create-space-class('.u-mx', 'margin', 'x');
// @include create-space-class('.u-my', 'margin', 'y');
// @include create-space-class('.u-pt', 'padding-top');
// @include create-space-class('.u-pl', 'padding-left');
// @include create-space-class('.u-pr', 'padding-right');
// @include create-space-class('.u-pb', 'padding-bottom');
// @include create-space-class('.u-px', 'padding', 'x');
// @include create-space-class('.u-py', 'padding', 'y');
// @include max-screen($breackpoint_md) {
//   @include create-space-class('.u-md-mt', 'margin-top');
//   @include create-space-class('.u-md-ml', 'margin-left');
//   @include create-space-class('.u-md-mr', 'margin-right');
//   @include create-space-class('.u-md-mb', 'margin-bottom');
//   @include create-space-class('.u-md-mx', 'margin', 'x');
//   @include create-space-class('.u-md-my', 'margin', 'y');
//   @include create-space-class('.u-md-pt', 'padding-top');
//   @include create-space-class('.u-md-pl', 'padding-left');
//   @include create-space-class('.u-md-pr', 'padding-right');
//   @include create-space-class('.u-md-pb', 'padding-bottom');
//   @include create-space-class('.u-md-px', 'padding', 'x');
//   @include create-space-class('.u-md-py', 'padding', 'y');
// }
// **********************************************
@mixin create-space-class($class, $property, $double: false) {
  @for $i from 0 through 100 {
    // $i % [x] == 0（[x]には生成したい値の倍数を入れる。例：5 = 5, 10, 15・・・のようにクラスが生成される）
    @if $i % 5 == 0 {
      #{$class + $i} {
        @if ($double == false) {
          #{$property}: #{$i}px;
        } @else if($double == 'x' and $i > 0) {
          #{$property}: 0 #{$i}px;
        } @else if($double == 'y' and $i > 0) {
          #{$property}: #{$i}px 0;
        }
      }
    }
  }
}
